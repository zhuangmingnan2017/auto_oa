<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yinian.autooa.dao.autocode.FileMapper" >
  <resultMap id="BaseResultMap" type="com.yinian.autooa.model.File" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="size" property="size" jdbcType="INTEGER" />
    <result column="last_modify_datetime" property="last_modify_datetime" jdbcType="TIMESTAMP" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="parent_id" property="parent_id" jdbcType="INTEGER" />
    <result column="is_folder" property="is_folder" jdbcType="INTEGER" />
    <result column="share_type" property="share_type" jdbcType="INTEGER" />
    <result column="upload_username" property="upload_username" jdbcType="VARCHAR" />
    <result column="upload_user_id" property="upload_user_id" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, size, last_modify_datetime, location, parent_id, is_folder, share_type, 
    upload_username, upload_user_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yinian.autooa.model.FileExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="page != null" >
      limit #{page.begin} , #{page.length}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from file
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from file
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yinian.autooa.model.FileExample" >
    delete from file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yinian.autooa.model.File" >
    insert into file (id, name, size, 
      last_modify_datetime, location, parent_id, 
      is_folder, share_type, upload_username, 
      upload_user_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{size,jdbcType=INTEGER}, 
      #{last_modify_datetime,jdbcType=TIMESTAMP}, #{location,jdbcType=VARCHAR}, #{parent_id,jdbcType=INTEGER}, 
      #{is_folder,jdbcType=INTEGER}, #{share_type,jdbcType=INTEGER}, #{upload_username,jdbcType=VARCHAR}, 
      #{upload_user_id,jdbcType=INTEGER})
    <selectKey resultType="int" keyProperty="id" order="AFTER" >
      <![CDATA[SELECT LAST_INSERT_ID() AS id ]]>
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.yinian.autooa.model.File" >
    insert into file
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="size != null" >
        size,
      </if>
      <if test="last_modify_datetime != null" >
        last_modify_datetime,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="parent_id != null" >
        parent_id,
      </if>
      <if test="is_folder != null" >
        is_folder,
      </if>
      <if test="share_type != null" >
        share_type,
      </if>
      <if test="upload_username != null" >
        upload_username,
      </if>
      <if test="upload_user_id != null" >
        upload_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="size != null" >
        #{size,jdbcType=INTEGER},
      </if>
      <if test="last_modify_datetime != null" >
        #{last_modify_datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="parent_id != null" >
        #{parent_id,jdbcType=INTEGER},
      </if>
      <if test="is_folder != null" >
        #{is_folder,jdbcType=INTEGER},
      </if>
      <if test="share_type != null" >
        #{share_type,jdbcType=INTEGER},
      </if>
      <if test="upload_username != null" >
        #{upload_username,jdbcType=VARCHAR},
      </if>
      <if test="upload_user_id != null" >
        #{upload_user_id,jdbcType=INTEGER},
      </if>
    </trim>
    <selectKey resultType="int" keyProperty="id" order="AFTER" >
      <![CDATA[SELECT LAST_INSERT_ID() AS id ]]>
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.yinian.autooa.model.FileExample" resultType="java.lang.Integer" >
    select count(*) from file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update file
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null" >
        size = #{record.size,jdbcType=INTEGER},
      </if>
      <if test="record.last_modify_datetime != null" >
        last_modify_datetime = #{record.last_modify_datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.location != null" >
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.parent_id != null" >
        parent_id = #{record.parent_id,jdbcType=INTEGER},
      </if>
      <if test="record.is_folder != null" >
        is_folder = #{record.is_folder,jdbcType=INTEGER},
      </if>
      <if test="record.share_type != null" >
        share_type = #{record.share_type,jdbcType=INTEGER},
      </if>
      <if test="record.upload_username != null" >
        upload_username = #{record.upload_username,jdbcType=VARCHAR},
      </if>
      <if test="record.upload_user_id != null" >
        upload_user_id = #{record.upload_user_id,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update file
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      size = #{record.size,jdbcType=INTEGER},
      last_modify_datetime = #{record.last_modify_datetime,jdbcType=TIMESTAMP},
      location = #{record.location,jdbcType=VARCHAR},
      parent_id = #{record.parent_id,jdbcType=INTEGER},
      is_folder = #{record.is_folder,jdbcType=INTEGER},
      share_type = #{record.share_type,jdbcType=INTEGER},
      upload_username = #{record.upload_username,jdbcType=VARCHAR},
      upload_user_id = #{record.upload_user_id,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yinian.autooa.model.File" >
    update file
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="size != null" >
        size = #{size,jdbcType=INTEGER},
      </if>
      <if test="last_modify_datetime != null" >
        last_modify_datetime = #{last_modify_datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="parent_id != null" >
        parent_id = #{parent_id,jdbcType=INTEGER},
      </if>
      <if test="is_folder != null" >
        is_folder = #{is_folder,jdbcType=INTEGER},
      </if>
      <if test="share_type != null" >
        share_type = #{share_type,jdbcType=INTEGER},
      </if>
      <if test="upload_username != null" >
        upload_username = #{upload_username,jdbcType=VARCHAR},
      </if>
      <if test="upload_user_id != null" >
        upload_user_id = #{upload_user_id,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yinian.autooa.model.File" >
    update file
    set name = #{name,jdbcType=VARCHAR},
      size = #{size,jdbcType=INTEGER},
      last_modify_datetime = #{last_modify_datetime,jdbcType=TIMESTAMP},
      location = #{location,jdbcType=VARCHAR},
      parent_id = #{parent_id,jdbcType=INTEGER},
      is_folder = #{is_folder,jdbcType=INTEGER},
      share_type = #{share_type,jdbcType=INTEGER},
      upload_username = #{upload_username,jdbcType=VARCHAR},
      upload_user_id = #{upload_user_id,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertBatchSelective" parameterType="java.util.List" >
    insert into file
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      name,
      size,
      last_modify_datetime,
      location,
      parent_id,
      is_folder,
      share_type,
      upload_username,
      upload_user_id,
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator="," >
      <trim prefix=" (" suffix=")" suffixOverrides="," >
        #{item.id,jdbcType=INTEGER},
        #{item.name,jdbcType=VARCHAR},
        #{item.size,jdbcType=INTEGER},
        #{item.last_modify_datetime,jdbcType=TIMESTAMP},
        #{item.location,jdbcType=VARCHAR},
        #{item.parent_id,jdbcType=INTEGER},
        #{item.is_folder,jdbcType=INTEGER},
        #{item.share_type,jdbcType=INTEGER},
        #{item.upload_username,jdbcType=VARCHAR},
        #{item.upload_user_id,jdbcType=INTEGER},
      </trim>
    </foreach>
  </insert>
</mapper>